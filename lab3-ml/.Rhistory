gDens = density(G)
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
# Plot the distribution and add the limits of the two CIs
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
# Quantile in red
geom_vline(xintercept=ci_eti$CI_low, color="red", size=1) +
geom_vline(xintercept=ci_eti$CI_high, color="red", size=1)
a = which.max(gDens
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
a = which.max(gDens)
a = which.max(G)
b = which.max(G)
a
b
G(a)
G(a)
G[a]
G[b]
plot(gDens)
a = which.max(gDens$y)
b = which.max(gDens$y)
a
b
gDens$x[a]
help(su,m)
help(sum)
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
gDens$y
gDens$y[a-1]
a
b
a = which.max(gDens$y)
b = which.max(gDens$y)
a
b
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
b = which.max(gDens$y)
b
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
sum(dens$y[0:a])
sum(gDens$y[0:a])
a = which.max(gDens$y)
sum(gDens$y[0:a])
while(tail(gDens,a,b)>0.1){
tail(gDens,a,b)
if( gDens$y[a-1] >= gDens$y[b+1] ){
a = a - 1
}else{
b = b + 1
}
}
a = which.max(gDens$y)
b = which.max(gDens$y)
sum(gDens$y[0:a])
gDens
gDens$[x]
gDens$x
gDens$x[5]-gDens$x[4]
gDens$x[15]-gDens$x[14]
gDens$x[25]-gDens$x[24]
gDens$x[105]-gDens$x[104]
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
tail(gDens,25,25)
tail(gDens,0,25)
tail(gDens,0,400)
tail(gDens,0,800)
tail(gDens,0,length(gDens))
tail(gDens,0,length(gDens)-50)
tail(gDens,0,length(gDens))
length(gDens)
length(gDens$y)
tail(gDens,0,512)
tail = function(dens,a,b){
return( (sum(dens$y[0:a])+sum(dens$y[b:length(dens)])) *(dens$y[25]-dens$y[24]) )
}
tail(gDens,0,512)
tail = function(dens,a,b){
return( (sum(dens$y[0:a])+sum(dens$y[b:length(dens)]))/sum(dens$y) )
}
tail(gDens,0,512)
a = which.max(gDens$y)
b = which.max(gDens$y)
while(tail(gDens,a,b)>0.1){
tail(gDens,a,b)
if( gDens$y[a-1] >= gDens$y[b+1] ){
a = a - 1
}else{
b = b + 1
}
}
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
sprintf(tail(gDens,a,b))
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
gDens$x[a]
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
gDens$x[a]
gDens$x[b]
gDens$x
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
HDI
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
HDI
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
CDI
HDI
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
# Quantile in red
geom_vline(xintercept=HDI[3], color="red", size=1) +
geom_vline(xintercept=HDI[4], color="red", size=1)
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic()
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic()
# Quantile in red
geom_vline(xintercept=HDI[1], color="red", size=1) +
geom_vline(xintercept=HDI[2], color="red", size=1)
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
# Quantile in red
geom_vline(xintercept=HDI[1], color="red", size=1) +
geom_vline(xintercept=HDI[2], color="red", size=1)
source('D:/Användare/Dokument D/TDDE07/Assign2.R')
plotG(HDI[1],HDI[2],"HDI")
plotG(CDI[1],CDI[2],"CDI")
plotG(HDI[1],HDI[2],"HDI")
plotG(CDI[1],CDI[2],"CDI")
# Plot the distribution and add the limits of the two CIs
G %>%
estimate_density(extend=TRUE) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("G equal tail credible interval")+
geom_area(fill="orange") +
theme_classic() +
# Quantile in red
geom_vline(xintercept=ci_eti$CI_low, color="red", size=1) +
geom_vline(xintercept=ci_eti$CI_high, color="red", size=1)
plotG(CDI[1],CDI[2],"CDI")
ci_eti
CDI
HDI = getHDI(gDens,0.1)
plotG(HDI[1],HDI[2],"HDI")
HDI
help("besselI")
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
k = rexp(1,1)
vonMise(mu,y,k)
k = rexp(1,1)
vonMise(mu,y,k)
vonMise = function(mu,y,k){
return ( exp(k*cos(y-mu))/(2*pi*besselI(k,0))  )
}
vonMise(mu,y,k)
pexp(k)
help("pexp")
pexp(1)
pexp(0.5)
pexp(0.1)
pexp(20)
pexp(10)
k = seq(0,10,0.001)
k
vonMise(mu,y,k)
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
vonMise = function(mu,y,k){
return ( exp(k.*cos(y-mu))/(2*pi*besselI(k,0)) )
}
vonMise(mu,y,k)
k = seq(0,10,0.001)
vonMise(mu,y,k)
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
vonMise = function(mu,y,k){
return ( prod(exp(k*cos(y-mu))/(2*pi*besselI(k,0))*dexp(k)) )
}
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
posterior
sum(posterior)
posterior = posterior/sum(posterior)
posterior
hist(posterior)
plot(x=k,y=posterior)
vonMise = function(mu,y,k){
return ( prod(exp(k*cos(y-mu))/(2*pi*besselI(k,0)))*dexp(k) )
}
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
posterior = posterior/sum(posterior)
plot(x=k,y=posterior)
sum(posterior)
k(which.max(posterior))
k[which.max(posterior)]
source('D:/Användare/Dokument D/TDDE07/Assign3.R')
# uppgift b
k[which.max(posterior)]
posterior = posterior/sum(posterior)
plot(x=k,y=posterior)
# uppgift b
k[which.max(posterior)]
source('D:/Användare/Dokument D/TDDE07/Assign1.R')
hist(posterior)
plot(smeans,col="red",main="Sample Mean vs Real",sub="Red: Sampled, Blue: Real",xlab="samplesammount/10",ylab="Mean")
abline(h=realMean,col="blue")
plot(svars,col="red",main="Sample Sdev vs Real",sub="Red: Sampled, Blue: Real",xlab="samplesammount/10",ylab="sdev")
abline(h=realVariance,col="blue")
x = seq(0, 1000000,500)
x = seq(0, 1000000,100)
source('D:/Användare/Dokument D/TDDD41/plotlab3.R')
x = seq(-1000000, 1000000,100)
plot(x,rbf(100000,x))
plot(x,rbf(1000,x))
plot(x,rbf(100000,x))
x = seq(-170, 170,1)
plot(x,rbf(100,x))
x = seq(-200, 200,1)
plot(x,rbf(100,x))
x = seq(-300, 300,1)
plot(x,rbf(100,x))
plot(x,rbf(100,x), xlab="Distance KM", "Kernel Value")
plot(x,rbf(100,x), xlab="Distance KM", ylab="Kernel Value")
plot(x,rbf(100,x), xlab="Distance KM", ylab="Kernel Value", main = "Distance Kernel", sub = "h = 100")
plot(x,rbf(25,x), xlab="Distance days", ylab="Kernel Value", main = "Day Kernel", sub = "h = 25")
x = seq(-360, 360,1)
plot(x,rbf(25,x), xlab="Distance days", ylab="Kernel Value", main = "Day Kernel", sub = "h = 25")
x = seq(-360, 360,0.2)
plot(x,rbf(25,x), xlab="Distance days", ylab="Kernel Value", main = "Day Kernel", sub = "h = 25")
x = seq(-150, 150,0.2)
plot(x,rbf(25,x), xlab="Distance days", ylab="Kernel Value", main = "Day Kernel", sub = "h = 25")
plot(x,rbf(24,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 24")
x = seq(-12, 12,0.2)
plot(x,rbf(24,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 24")
x = seq(-12, 12,0.05)
plot(x,rbf(24,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 24")
x = seq(-12, 12,0.05)
plot(x,rbf(3), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 3")
plot(x,rbf(3,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 3")
x = seq(-12, 12,0.05)
plot(x,rbf(3,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 3")
x = seq(-12, 12,0.005)
plot(x,rbf(3,x), xlab="Distance in hours", ylab="Kernel Value", main = "Hour Kernel", sub = "h = 3")
setwd("D:/Användare/Dokument D/TDDD41/bigdata/lab3-ml")
dat = read.csv2("lab 3 results")
dat = read.csv2("lab 3 results.txt")
View(dat)
help(csv2)
help("csv2")
help("csv")
help(read.csv23)
help(read.csv2)
dat = read.csv2("lab 3 results.txt", sep = ",")
dat
dat = read.csv2("lab 3 results.txt", sep = ",", headers = False)
dat = read.csv2("lab 3 results.txt", sep = ",", headers = FALSE)
dat = read.csv2("lab 3 results.txt", sep = ",", headers = FALSE)
dat = read.csv2("lab 3 results.txt", sep = ",", header = FALSE)
dat
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
dat
plot(dat$V1,dat$V3)
dat$V3 = as.factor(dat$V3)
plot(dat$V1,dat$V3)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
dat$V3 = as.factor(dat$V3)
plot(dat$V1,dat$V3)
dat$V2
dat$V3
dat$V3 = as.factor(dat$V3)
dat$V3 = as.factor(dat$V3)
dat$V3
dat$V3 = as.factor(dat$V3)
plot(dat$V1,dat$V3)
dat$V3
dat$V3
dat$V3 = as.factor(dat$V3)
plot(dat$V1,dat$V3)
dat$V3 = as.numeric(dat$V3)
plot(dat$V1,dat$V3)
dat$V3
dat$V2
dat$V2 = as.numeric(dat$V2)
plot(dat$V1,dat$V3)
library(ggplot2)
library("ggplot2")
ggplot(dat$V1,dat$V3)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
f = data.frame(
times = dat$V1,
sum = as.numeric(dat$V2),
factor = as.numeric(dat$V3)
)
ggplot(dat$V1,dat$V3)
source('D:/Användare/Dokument D/TDDD41/bigdata/lab3-ml/plots.R')
ggplot(f, aes(x=times, y=sum))
ggplot(f, aes(x=times, y=sum)) + geom_line()
f
ggplot(f, aes(x=times, y=sum)) + geom_line()
ggplot(f, aes(x=times, y=sum))
ggplot(f, aes(x=times, y=sum)) + geom_point()
ggplot(f, aes(x=times, y=sum)) + geom_line()
ggplot(f, aes(x=times, y=sum)) + geom_lines()
ggplot(f, aes(x=times, y=sum)) + geom_line()
ggplot(f, aes(x=times, y=sum)) + geom_line()
ggplot(f, aes(x=times, y=sum)) + geom_lines()
ggplot(f, aes(x=times, y=sum)) + geom_abline()
ggplot(f, aes(x=times, y=sum)) + geom_line()
ggplot(f, aes(x=times, y=sum)) + geom_points()
ggplot(f, aes(x=times, y=sum)) + geom_point()
ggplot(f, aes(x=times, y=sum)) + geom_point() + geom_line()
ggplot(f, aes(x=times, y=sum)) + geom_point()
ggplot(f, aes(x=times, y=sum)) + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line(linetype="filled") + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum), group = 1) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum), group=1) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
data$V2
dat$V2
as.factor(dat$V2)
as.factor(dat$V3)
as.factor(dat$V3)
as.factor(dat$V2)
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
as.factor(dat$V3)
source('D:/Användare/Dokument D/TDDD41/bigdata/lab3-ml/plots.R')
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
as.factor(dat$V3)
as.factor(dat$V2)
as.factor(dat$V3)
as.factor(dat$V3)
as.factor(dat$V2)
as.factor(dat$V2)
as.factor(dat$V3)
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
factor
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
as.factor(dat$V2)
as.factor(dat$V3)
as.factor(dat$V3)
f = data.frame(
times = dat$V1,
sum = as.numeric(dat$V2),
factor = as.numeric(dat$V3)
)
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
line(x=dat$V1, y = as.numeric(dat$V2))
plot(x=dat$V1, y = as.numeric(dat$V2))
abline(x=dat$V1, y = as.numeric(dat$V2))
plot(x=dat$V1, y = as.numeric(dat$V2), shape="line")
help("plot")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="b")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="b")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="l")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="l")
plot(x=dat$V1, y = as.numeric(dat$V2), type ="b")
help(plot)
plot(x=dat$V1, y = as.numeric(dat$V2), type ="c")
plot(x=dat$V1, y = as.numeric(dat$V3))
2
View(f)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
View(dat)
f = data.frame(
times = dat$V1,
sum = as.numeric(dat$V2),
factor = as.numeric(dat$V3)
)
View(f)
View(dat)
f = data.frame(
times = dat$V1,
sum = as.double(dat$V2),
factor = as.double(dat$V3)
)
View(f)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
plot(x=dat$V1, y = (dat$V2))
plot(x=dat$V1, y = as.numeric(dat$V2))
View(dat)
View(f)
View(dat)
f = data.frame(
times = dat$V1,
sum = as.double(dat$V2),
factor = as.double(dat$V3)
)
View(f)
View(dat)
plot(x=dat$V1, y = (dat$V2))
as.factor(dat$V2)
as.factor(dat$V3)
as.numeric(dat$V2)
as.double(dat$V2)
(dat$V2)
as.factor(dat$V2)
as.numeric(dat$V2)
dat = read.csv2("lab 3 results copy.txt", sep = ", ", header = FALSE)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
f = data.frame(
times = dat$V1,
sum = as.double(dat$V2),
factor = as.double(dat$V3)
)
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
View(dat)
dat = read.csv2("lab 3 results copy.txt", sep = ",", header = FALSE)
dat = read.csv2("lab 3 results copy.txt", sep = ";", header = FALSE)
f = data.frame(
times = dat$V1,
sum = as.double(dat$V2),
factor = as.double(dat$V3)
)
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
f = data.frame(
times = dat$V1,
sum = as.double(dat$V2),
factor = as.double(dat$V3)
)
plot(x=dat$V1, y = (dat$V2))
f = data.frame(
times = dat$V1,
sum = as.numeric(dat$V2),
factor = as.numeric(dat$V3)
)
f = data.frame(
times = dat$V1,
sum = as.numeric(dat$V2),
factor = as.numeric(dat$V3)
)
as.numeric(dat$V3)
as.numeric(as.character(dat$V3))
dat$V3
f = data.frame(
times = dat$V1,
sum = as.numeric(as.character(dat$V2)),
factor = as.numeric(as.character(dat$V3))
)
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum),groups=1) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum),groups=2) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum,groups=1)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum,groups=2)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
source('D:/Användare/Dokument D/TDDD41/bigdata/lab3-ml/plots.R')
ggplot(data = f, aes(x=times, y=sum)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
x= seq(4,24,2)
x= seq(4,24,2)
f = data.frame(
times = x,
sum = as.numeric(as.character(dat$V2)),
factor = as.numeric(as.character(dat$V3))
)
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point()
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_point(data=f, aes(x=times, y=sum))
ggplot(data = f, aes(x=times, y=factor)) + geom_line() + geom_line(data=f, aes(x=times, y=sum))
ggplot(data = f, aes(x=times, y=factor, color="blue")) + geom_line() + geom_line(data=f, aes(x=times, y=sum))
ggplot(data = f, aes(x=times, y=factor)) + geom_line(color="Factor") + geom_line(data=f, aes(x=times, y=sum))
ggplot(data = f, aes(x=times, y=factor,color="Factor")) + geom_line() + geom_line(data=f, aes(x=times, y=sum))
ggplot(data = f, aes(x=times, y=factor,color="Factor")) + geom_line() + geom_line(data=f, aes(x=times, y=sum,color="sum"))
ggplot(data = f, aes(x=times, y=factor,color="Factor")) + geom_line() + geom_line(data=f, aes(x=times, y=sum,color="Sum"))
f = data.frame(
time = x,
sum = as.numeric(as.character(dat$V2)),
factor = as.numeric(as.character(dat$V3))
)
ggplot(data = f, aes(x=times, y=factor,color="Factor")) + geom_line() + geom_line(data=f, aes(x=times, y=sum,color="Sum"))
ggplot(data = f, aes(x=time, y=factor,color="Factor")) + geom_line() + geom_line(data=f, aes(x=time, y=sum,color="Sum"))
